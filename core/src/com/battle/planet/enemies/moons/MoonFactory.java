package com.battle.planet.enemies.moons;

import com.battle.planet.enemies.Enemy;
import com.battle.planet.enemies.Saturn;

public class MoonFactory {

    private int moonsLeft = 53;
    private String[] moonNames = {

    };

    /**
     * [generateMoon]
     * Generates a moon for the saturn boss. Moons are generated by a set pattern, with the exception that the first 2
     * moons will always be trailer moons.
     * @param s the Saturn enemy to link with the moon
     * @param x the x position to spawn the moon at
     * @param y the y position to spawn the moon at
     * @return Enemy, the associated moon to spawn
     */
    public Enemy generateMoon(Saturn s, float x, float y) {
        Enemy toSpawn;
        if (moonsLeft % 4 == 0 || moonsLeft > 51) {
            toSpawn = new TrailerMoon(s, s.getLevel(), x, y);
        } else if (moonsLeft % 2 == 0) {
            toSpawn = new SaturnMoonA(s, s.getLevel(), x, y);
        } else {
            toSpawn = new ChaserMoon(s, s.getLevel(), x, y);
        }
        moonsLeft--;
        return toSpawn;
    }

    public boolean canGenerateMoon() {
        return moonsLeft > 0;
    }
}
